library(INLA)
q()
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
warnings()
library(INLA)
install.packages("sp")
library(INLA)
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/testing"), dep=TRUE)
options(repos=c(
inlabruorg = "https://inlabru-org.r-universe.dev",
INLA = "https://inla.r-inla-download.org/R/testing",
CRAN = "https://cran.rstudio.com")
)
install.packages("fmesher")
q()
install.packages("fmesher")
install.packages("fmesher")
install.packages("units")
install.packages("fmesher")
install.packages("sf")
install.packages("sf")
install.packages("sf")
q()
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
library(lattice);require(latticeExtra)#;require(INLAutils)
install.packages("interp")
unlink("/home/dp/R/x86_64-redhat-linux-gnu-library/4.3/00LOCK-interp")
install.packages("interp")
file.remove("/home/dp/R/x86_64-redhat-linux-gnu-library/4.3/00LOCK-interp")
unlink("/home/dp/R/x86_64-redhat-linux-gnu-library/4.3/00LOCK-interp", recursive = TRUE)
install.packages("interp")
pkgdown:::build_site_external()
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/inla_fct.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
## INLA
imginla <- stationary_inla(x[valid],y[valid],logimg[valid],zoom=zoom,xsize=xsize,shape='none',xfin=xfin,yfin=yfin,ysize=ysize,cutoff=cutoff,tolerance=1e-6,restart=0)
## PLOT
fj5_img <- classIntervals(c(logimg[valid],imginla$out[valid]), n = cutColor, style= "fisher")
## PLOT
valid_omit<- na.omit(valid)
fj5_img <- classIntervals(c(logimg[valid_omit],imginla$out[valid_omit]), n = cutColor, style= "fisher")
## PLOT
valid_omit<- complete.cases(valid)
fj5_img <- classIntervals(c(logimg[valid_omit],imginla$out[valid_omit]), n = cutColor, style= "fisher")
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
## PLOT
fj5_img <- classIntervals(c(logimg[valid],imginla$out[valid]), n = cutColor, style= "fisher")
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
##Summary
summary(logimg)
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
##valid data
valid <- which(!(img>278.784) & !(img=="NaN"))
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
### x and y
dim <- dim(img)
dim
subset_img <- img[1:20, 1:20]  # This will extract the top-left 20x20 portion of the img array
source("~/Documents/praktikum/inla_project/Stavros/stavros.R", echo=TRUE)
summary(logimg)
##valid data
valid <- which(!(img<278) & !(img=="NaN"))
xsize <- dim[2]
ysize <- dim[1]
xfin <- xsize
yfin <- ysize
##normalize data
logimg = log10(img)
##valid data
valid <- which(!(img < 27 | is.na(img)))
xsize <- dim[2]
ysize <- dim[1]
xfin <- xsize
yfin <- ysize
##normalize data
logimg = log10(img)
##valid data
valid <- which(!(img < 27 |! is.na(img)))
xsize <- dim[2]
ysize <- dim[1]
xfin <- xsize
yfin <- ysize
##normalize data
logimg = log10(img)
##valid data
valid <- which(!(img < 27 | is.na(img)))
xsize <- dim[2]
ysize <- dim[1]
xfin <- xsize
yfin <- ysize
##normalize data
logimg = log10(img)
##valid data
valid <- which(!(img < 27 | is.na(img)|img ==0))
xsize <- dim[2]
ysize <- dim[1]
xfin <- xsize
yfin <- ysize
##normalize data
logimg = log10(img)
##valid data
valid <- which(!(img < 278 | is.na(img)|img ==0))
xsize <- dim[2]
ysize <- dim[1]
xfin <- xsize
yfin <- ysize
##normalize data
logimg = log10(img)
summary(valid
)
summary(valid)
##valid data
valid <- which(!(img < 278 | is.na(img)))
xsize <- dim[2]
ysize <- dim[1]
xfin <- xsize
yfin <- ysize
summary(valid)
##valid data
valid <- which(!(img < 278 | is.na(img)|img > 999))
xsize <- dim[2]
ysize <- dim[1]
xfin <- xsize
yfin <- ysize
summary(valid)
##normalize data
logimg = log10(img)
summary(logimg)
##normalize data
logimg = log10(valid)
summary(logimg)
## INLA
imginla <- stationary_inla(x[valid],y[valid],logimg[valid],zoom=zoom,xsize=xsize,shape='none',xfin=xfin,yfin=yfin,ysize=ysize,cutoff=cutoff,tolerance=1e-6,restart=0)
View(img)
View(img)
source("~/Documents/praktikum/inla_project/Stavros/inla_fct.R", echo=TRUE)
source("~/Documents/praktikum/inla_project/Stavros/inla_fct.R", echo=TRUE)
